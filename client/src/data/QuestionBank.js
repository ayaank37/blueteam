export const questionBank = [
  // Level 1 – Python Basics (20 questions)
  [
    { prompt: "What is the output of: print(2 + 3)", answer: "5" },
    { prompt: 'Data type of "True"?', answer: "str" },
    { prompt: "Write a comment symbol.", answer: "#" },
    { prompt: 'Output of print("Hello")?', answer: "Hello" },
    { prompt: "Type of 3.14?", answer: "float" },
    { prompt: "Symbol for multiplication?", answer: "*" },
    { prompt: "Set variable x to 10.", answer: "x=10" },
    { prompt: "Function to output text?", answer: "print" },
    { prompt: "What ends a code block?", answer: "indent" },
    { prompt: "Convert '5' to int.", answer: "int" },
    { prompt: "Check variable type.", answer: "type" },
    { prompt: "print(True and False) output?", answer: "False" },
    { prompt: "Start an if statement.", answer: "if" },
    { prompt: "Function to get length.", answer: "len" },
    { prompt: "Get user input.", answer: "input" },
    { prompt: "Output of 10 // 3?", answer: "3" },
    { prompt: "What is a string literal?", answer: "text" },
    { prompt: "Equals comparison symbol?", answer: "==" },
    { prompt: "Create a list.", answer: "[]" },
    { prompt: "Boolean value of ''?", answer: "False" },
  ],

  // Level 2 – Repeating & Choosing (20 questions)
  [
    { prompt: "Keyword for if statement?", answer: "if" },
    { prompt: "What does 10 > 5 return?", answer: "True" },
    { prompt: 'Output: if 3 < 5: print("Yes")?', answer: "Yes" },
    { prompt: "Loop that repeats 3 times?", answer: "for" },
    { prompt: "Loop while condition True?", answer: "while" },
    { prompt: "Alternative condition keyword?", answer: "else" },
    { prompt: "Multiple condition check?", answer: "elif" },
    { prompt: "Break out of loop?", answer: "break" },
    { prompt: "Skip current loop iteration?", answer: "continue" },
    { prompt: "Loop with no end?", answer: "infinite" },
    { prompt: "range(5) produces?", answer: "0,1,2,3,4" },
    { prompt: "Write a while loop.", answer: "while" },
    { prompt: "Print 'Hello' 5 times.", answer: "for" },
    { prompt: "Logical AND keyword?", answer: "and" },
    { prompt: "Logical OR keyword?", answer: "or" },
    { prompt: "not True equals?", answer: "False" },
    { prompt: "Output of 5 != 3?", answer: "True" },
    { prompt: "Not equal symbol?", answer: "!=" },
    { prompt: "Else-if keyword?", answer: "elif" },
    { prompt: "Do nothing keyword?", answer: "pass" },
  ],

  // Level 3 – Lists & Strings (20 questions)
  [
    { prompt: "What is a list?", answer: "collection" },
    { prompt: "Access first item in a=[1,2,3].", answer: "a[0]" },
    { prompt: "Convert 'hi' to uppercase.", answer: "upper" },
    { prompt: "Type of [1,2,3]?", answer: "list" },
    { prompt: "Is string mutable?", answer: "no" },
    { prompt: "Add item to list end.", answer: "append" },
    { prompt: "Remove last list item.", answer: "pop" },
    { prompt: "Get length of list.", answer: "len" },
    { prompt: "Slice first 3 items.", answer: "[:3]" },
    { prompt: "'in' keyword checks?", answer: "membership" },
    { prompt: "Join list with spaces.", answer: "join" },
    { prompt: "Split string by spaces.", answer: "split" },
    { prompt: "Immutable sequence?", answer: "tuple" },
    { prompt: "Convert list to tuple.", answer: "tuple" },
    { prompt: "Remove whitespace.", answer: "strip" },
    { prompt: "Reverse a list.", answer: "reverse" },
    { prompt: "Check if list empty.", answer: "len==0" },
    { prompt: "String concatenation symbol.", answer: "+" },
    { prompt: "Count occurrences.", answer: "count" },
    { prompt: "Find item position.", answer: "index" },
  ],

  // Level 4 – Logic & Functions (20 questions)
  [
    { prompt: "Keyword to define function.", answer: "def" },
    { prompt: "Syntax error means?", answer: "mistake" },
    { prompt: "What does return do?", answer: "gives value" },
    { prompt: "Call function sayHi.", answer: "sayHi()" },
    { prompt: "Keyword for user input.", answer: "input" },
    { prompt: "Make variable global.", answer: "global" },
    { prompt: "Default function argument.", answer: "arg=value" },
    { prompt: "Function calls itself?", answer: "recursion" },
    { prompt: "None means?", answer: "no value" },
    { prompt: "Anonymous function?", answer: "lambda" },
    { prompt: "Empty function body.", answer: "pass" },
    { prompt: "Handle errors?", answer: "try" },
    { prompt: "Raise exception?", answer: "raise" },
    { prompt: "Import functions?", answer: "import" },
    { prompt: "Function docs?", answer: "docstring" },
    { prompt: "Return multiple values?", answer: "tuple" },
    { prompt: "Function that yields?", answer: "generator" },
    { prompt: "Keyword for class.", answer: "class" },
    { prompt: "Call parent constructor.", answer: "super" },
    { prompt: "*args and **kwargs?", answer: "args kwargs" },
  ],

  // Levels 5-8 empty for now
  [], [], [], [],
];
